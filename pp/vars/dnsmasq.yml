#
#  Copyright 2015 VMware, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
---
#--- Network Services on specific nics
# the general domain name to serve up
dnsmasq_domain_name: corp.local

# interfaces for which only DNS should apply, though are not DHCP enabled
dnsmasq_dns_only:
  - "eth1"
  - "eth3"

# for photon is, we need to use a forwarding file explicitly
#dnsmasq_nameservers: True

# 'External' interfaces (implicitly *not* DHCP serving), often one use for external NAT
dnsmasq_external_interfaces:
  - { search: 'corp.local vmware.com',  broadcast: '192.168.0.255', prefixbits: "24", netmask: '255.255.255.0',  dns1: '10.148.20.5', dns2: '10.148.20.6', address: '192.168.0.2', device: 'eth3', type: 'static', gateway: '192.168.0.1', name: "public"}
  - { address: "10.10.0.2", prefixbits: "16", netmask: "255.255.0.0", broadcast: "10.10.255.255",  device: 'eth1', type: 'static', name: "vm" }

# For each net device that DHCP is desired, set the network up as a static router interface
dnsmasq_dhcp_networks:
  - {  device: "eth0", address: "192.168.10.2", prefixbits: "24", netmask: "255.255.255.0", broadcast: "192.168.10.255",  range: "192.168.10.3,static", lease: 1440, dns: "192.168.10.2", name: "management" }
  - {  device: "eth2", address: "192.168.11.2", prefixbits: "24", netmask: "255.255.255.0", broadcast: "192.168.11.255",  range: "192.168.11.3,192.168.11.254", lease: 1440, dns: "192.168.11.2", name: "storage" }

# Set static reservations here for assuring specific serves addresses
# These need not be in the ranges above.
dnsmasq_dhcp_reservations:
  # ESXi management host nics on Management Network
  - { hostname: "esx-m-01a.corp.local", address: "192.168.10.10", mac: "00:50:56:01:2e:28" }
  - { hostname: "esx-m-02a.corp.local", address: "192.168.10.11", mac: "00:50:56:01:2e:33" }
  - { hostname: "esx-m-03a.corp.local", address: "192.168.10.12", mac: "00:50:56:01:2e:3d" }
  # ESXi compute host nics on Management Network
  - { hostname: "esx-c-01a.corp.local", address: "192.168.10.13", mac: "00:50:56:01:2e:2c" }
  - { hostname: "esx-c-02a.corp.local", address: "192.168.10.14", mac: "00:50:56:01:2e:38" }
  - { hostname: "esx-c-03a.corp.local", address: "192.168.10.15", mac: "00:50:56:01:2e:45" }
  # NFS hosts
  - { hostname: "nfs-m-01a.corp.local", address: "192.168.11.10", mac: "00:50:56:01:39:e6" }
  - { hostname: "nfs-c-01a.corp.local", address: "192.168.11.11", mac: "00:50:56:01:39:e4" }

# hosts not otherwise setup by DHCP requestors we want in the domain.
dnsmasq_additional_hosts:
  - { host: "router.corp.local", ipv4: "192.168.0.2" }

# alias (cname) records
dnsmasq_cnames:
  - { host: "vpodrouter.corp.local", target: "router.corp.local" }
  - { host: "chaperone-ui.corp.local", target: "router.corp.local" }
  - { host: "tftp.corp.local", target: "chaperone-ui.corp.local" }

# Enable and setup tftp services
dnsmasq_enable_tftp: True
dnsmasq_tftp_webroot_vhost: "/etc/httpd/conf/tftp.conf"
dnsmasq_tftp_iso: "/var/www/html/downloads/VMware-VMvisor-Installer-6.0.0-3620759.x86_64.iso"
dnsmasq_tftp_images_dir: "/tftp/pxeboot/images/ESXi-{{ esxi_tftp_esxi_version }}"
dnsmasq_tftp_kickstart_dir: "/tftp/webroot/KS"
dnsmasq_tftp_kickstart_file: "ESX_KS.CFG"
